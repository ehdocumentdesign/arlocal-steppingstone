/*
Views for resources with _text_markup attributes use ParserHelper to generate
HTML from markup. The MarkupParser instance variable @html_class assigns the
class attribute from a resource's _parser_id attribute.

The generic <P> element defined in `__reset/elements.scss` includes top and
bottom margins by default, making the effective margin between any container
and a neighboring text container the combined margin of the parents and the
inner paragraph.

By negating the top margin of the first paragraph and the bottom margin of the
last paragraph, the parent container declares the effective margin between the
text and surrounding containers.

This seemed like the easiest way to create a predictable layout within an
environment that tries to accommodate several different markup processers and
`display: [block|flex]` paradigms.
*/

// .arl_markup_parser_html_tag_p {
//   margin-top: -(#{$arl-line-height});
//   margin-bottom: -(#{$arl-line-height});
// }
.arl_markup_parser_markdown_commonmarker {
  margin-top: -(#{$arl-line-height});
  margin-bottom: -(#{$arl-line-height});
}
.arl_markup_parser_simple_format_rails {
  margin-top: -(#{$arl-line-height});
  margin-bottom: -(#{$arl-line-height});
}
